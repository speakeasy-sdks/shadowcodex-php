<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace shadowcodex\slackspec\Models\Operations;

use \shadowcodex\slackspec\Utils\SpeakeasyMetadata;
class SearchMessagesRequest
{
    /**
     * Pass the number of results you want per "page". Maximum of `100`.
     * 
     * @var ?int $count
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=count')]
    public ?int $count = null;
    
    /**
     * Pass a value of `true` to enable query highlight markers (see below).
     * 
     * @var ?bool $highlight
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=highlight')]
    public ?bool $highlight = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Search query.
     * 
     * @var string $query
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public string $query;
    
    /**
     * Return matches sorted by either `score` or `timestamp`.
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Change sort direction to ascending (`asc`) or descending (`desc`).
     * 
     * @var ?string $sortDir
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_dir')]
    public ?string $sortDir = null;
    
    /**
     * Authentication token. Requires scope: `search:read`
     * 
     * @var string $token
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=token')]
    public string $token;
    
	public function __construct()
	{
		$this->count = null;
		$this->highlight = null;
		$this->page = null;
		$this->query = "";
		$this->sort = null;
		$this->sortDir = null;
		$this->token = "";
	}
}
