<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace shadowcodex\slackspec\Models\Operations;

use \shadowcodex\slackspec\Utils\SpeakeasyMetadata;
class FilesInfoRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=count')]
    public ?string $count = null;
    
    /**
     * Parameter for pagination. File comments are paginated for a single file. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first "page" of the collection of comments. See [pagination](/docs/pagination) for more details.
     * 
     * @var ?string $cursor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cursor')]
    public ?string $cursor = null;
    
    /**
     * Specify a file by providing its ID.
     * 
     * @var ?string $file
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=file')]
    public ?string $file = null;
    
    /**
     * The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?string $page = null;
    
    /**
     * Authentication token. Requires scope: `files:read`
     * 
     * @var ?string $token
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=token')]
    public ?string $token = null;
    
	public function __construct()
	{
		$this->count = null;
		$this->cursor = null;
		$this->file = null;
		$this->limit = null;
		$this->page = null;
		$this->token = null;
	}
}
