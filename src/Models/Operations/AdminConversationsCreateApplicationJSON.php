<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace shadowcodex\slackspec\Models\Operations;


class AdminConversationsCreateApplicationJSON
{
    /**
     * Description of the public or private channel to create.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * When `true`, creates a private channel instead of a public channel
     * 
     * @var bool $isPrivate
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_private')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isPrivate;
    
    /**
     * Name of the public or private channel to create.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel
     * 
     * @var ?bool $orgWide
     */
	#[\JMS\Serializer\Annotation\SerializedName('org_wide')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $orgWide = null;
    
    /**
     * The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.
     * 
     * @var ?string $teamId
     */
	#[\JMS\Serializer\Annotation\SerializedName('team_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $teamId = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->isPrivate = false;
		$this->name = "";
		$this->orgWide = null;
		$this->teamId = null;
	}
}
