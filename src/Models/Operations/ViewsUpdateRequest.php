<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace shadowcodex\slackspec\Models\Operations;

use \shadowcodex\slackspec\Utils\SpeakeasyMetadata;
class ViewsUpdateRequest
{
    /**
     * A unique identifier of the view set by the developer. Must be unique for all views on a team. Max length of 255 characters. Either `view_id` or `external_id` is required.
     * 
     * @var ?string $externalId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=external_id')]
    public ?string $externalId = null;
    
    /**
     * A string that represents view state to protect against possible race conditions.
     * 
     * @var ?string $hash
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=hash')]
    public ?string $hash = null;
    
    /**
     * Authentication token. Requires scope: `none`
     * 
     * @var string $token
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=token')]
    public string $token;
    
    /**
     * A [view object](/reference/surfaces/views). This must be a JSON-encoded string.
     * 
     * @var ?string $view
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=view')]
    public ?string $view = null;
    
    /**
     * A unique identifier of the view to be updated. Either `view_id` or `external_id` is required.
     * 
     * @var ?string $viewId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=view_id')]
    public ?string $viewId = null;
    
	public function __construct()
	{
		$this->externalId = null;
		$this->hash = null;
		$this->token = "";
		$this->view = null;
		$this->viewId = null;
	}
}
